plugins {
    id 'java'
    id 'io.quarkus'
    id 'org.unbroken-dome.xjc' version '2.0.0'
}


//tasks.register('generateCfdi', org.unbrokendome.gradle.plugins.xjc.XjcGenerate) {
//    group = 'xjc'
//    description = 'Genera clases Java desde el esquema CFDI'
//
//    source = fileTree('src/main/resources/xsd') {
//        include '**/*.xsd'
//    }
//
//
//    outputDirectory = file("$buildDir/generated-sources/xjc")
//
//
//}
//
sourceSets {
    main {
        java {
            srcDir "$buildDir/generated-sources/xjc"
        }
    }
}

//compileJava.dependsOn tasks.named('generateCfdi')



repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-arc'

    // Core Reactive Messaging
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging'
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging-rabbitmq'


    //implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation enforcedPlatform("io.quarkus:quarkus-bom:3.9.2")

    //implementation 'io.quarkus:quarkus-resteasy-reactive'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.1'


    implementation 'io.quarkus:quarkus-rest-client-jackson'
    implementation 'io.quarkus:quarkus-rest-client'


    // Add JAXB runtime (if needed for runtime operations)
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.1'

    // Add JAXB XJC (if needed for code generation)
    implementation 'org.glassfish.jaxb:jaxb-xjc:3.0.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'


    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'org.flechaamarilla'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}




test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
